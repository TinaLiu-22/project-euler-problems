// Problem 2

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
						1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
*/

// interactive environment ==> codeboot.org

var d = new Date();
var start = d.getTime();
var last = 0;
var timeAcc = 0;

function sum(tab) { // sum of all the values inside the table.
    return tab.reduce( function(x,y) {return x+y;} );
}

function fibo(n) { // returns the n-nth numbers of the Fibonacci recursive sequence.
    /* source:
    https://medium.com/quick-code/fibonacci-sequence-javascript-interview-
    question-iterative-and-recursive-solutions-6a0346d24053 */

    var fib = [0, 1]; // the default values for n=0 and n=1 of Fibonacci numbers.

  	for (var i=2; i < n+1; i++){ // keep going until we reach the last recursive.
    	fib.push(fib[i-2] + fib[i-1]); // record the Fibonacci number (iterative).
    }

    return fib[n];
}

function fiboSumOfEven(limit) {
  // function looks for even numbers of Fibonacci that are less than a given
  // limit.

  var evenFibo = [], n=0; // record the even Fibonacci numbers, and evaluate starting
                          // from the first Fibonacci number.

  while (true) { // repeat all the steps until broken.

    var fibo1 = fibo(n); // the value of the n-nth Fibonacci number (avoid re-calculating).
                         // the number over and over.

   	if (fibo1 > limit) { // if over the given limit,
       	break;           // stop looking for even numbers.
    } else if (fibo1 % 2 == 0) { // if an even number,
     	evenFibo.push(fibo1); // record it.
    }

    n++; // go to the next Fibonacci number.
	
	d = new Date();
	timeAcc += d.getTime() - start - last;
	last = d.getTime() - start;
	
	if (timeAcc/1000 > 1) {
		timeAcc -= 1000;
		console.clear();
		console.log(Math.floor(last/1000) + " seconds have passed.");
	}
  }

  return sum(evenFibo); // return the sum of all even Fibonacci numbers under the given limit.
}

function main() {
	console.log("It took " + (last/1000) + " seconds.");
	console.log("Result: " + fiboSumOfEven(4000000));
}

main();